{"version":3,"sources":["TargetPortal.js","App.js","index.js"],"names":["TargetPortal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","moveToTarget","target","targets","find","t","case","predicate","ref","contains","el","appendChild","document","createElement","nodeType","prevProps","removeChild","ReactDOM","createPortal","children","Component","defaultProps","App","state","_this2","setState","targetColor","interval","setInterval","clearInterval","_this3","react_default","a","src_TargetPortal","blueDiv","redDiv","style","color","backgroundColor","render","src_App","getElementById"],"mappings":"uKAIMA,cASJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAkBRQ,aAAe,WACb,IAAMC,EAASR,EAAKD,MAAMU,QAAQC,KAChC,SAAAC,GAAC,OAAIA,EAAEC,OAASZ,EAAKD,MAAMc,YAE7Bb,EAAKc,IAAMN,GAAUA,EAAOM,IAAMN,EAAOM,IAAM,KAC1Cd,EAAKc,MAAOd,EAAKc,IAAIC,SAASf,EAAKgB,KACxChB,EAAKc,IAAIG,YAAYjB,EAAKgB,KAvB1BhB,EAAKgB,GAAKE,SAASC,cAAcnB,EAAKD,MAAMqB,UAF3BpB,mFAKjBG,KAAKI,0DAEYc,GAEfA,EAAUR,YAAcV,KAAKJ,MAAMc,WACnCQ,EAAUZ,UAAYN,KAAKJ,MAAMU,SAEjCN,KAAKI,8DAGHJ,KAAKW,KAAOX,KAAKW,IAAIC,SAASZ,KAAKa,KACrCb,KAAKW,IAAIQ,YAAYnB,KAAKa,qCAY5B,OAAOO,IAASC,aAAarB,KAAKJ,MAAM0B,SAAUtB,KAAKa,WArChCU,aAArB5B,EACG6B,aAAe,CACpBP,SAAU,MACVX,QAAS,IAsCEX,QCKA8B,6MA9CbC,MAAQ,sFACY,IAAAC,EAAA3B,KAClBA,KAAK4B,SAAS,CAAEC,YAAa,SAC7B7B,KAAK8B,SAAWC,YAAY,WAC1BJ,EAAKC,SAAS,CACZC,YAAwC,QAA3BF,EAAKD,MAAMG,YAAwB,OAAS,SAE1D,oDAGHG,cAAchC,KAAK8B,2CAEZ,IAAAG,EAAAjC,KACP,OACEkC,EAAAC,EAAAnB,cAAA,WACEkB,EAAAC,EAAAnB,cAACoB,EAAD,CACE1B,UAAWV,KAAK0B,MAAMG,YACtBvB,QAAS,CACP,CACEG,KAAM,OACNE,IAAKX,KAAKqC,SAEZ,CACE5B,KAAM,MACNE,IAAKX,KAAKsC,UAIdJ,EAAAC,EAAAnB,cAAA,kCAEFkB,EAAAC,EAAAnB,cAAA,OACEuB,MAAO,CAAEC,MAAO,QAASC,gBAAiB,QAC1C9B,IAAK,SAAAA,GAAG,OAAKsB,EAAKI,QAAU1B,KAE9BuB,EAAAC,EAAAnB,cAAA,kFAGAkB,EAAAC,EAAAnB,cAAA,OACEuB,MAAO,CAAEC,MAAO,QAASC,gBAAiB,OAC1C9B,IAAK,SAAAA,GAAG,OAAKsB,EAAKK,OAAS3B,aAxCnBY,aCClBH,IAASsB,OAAOR,EAAAC,EAAAnB,cAAC2B,EAAD,MAAS5B,SAAS6B,eAAe","file":"static/js/main.b1dc287d.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\nclass TargetPortal extends Component {\n  static defaultProps = {\n    nodeType: \"div\",\n    targets: [],\n  };\n  static propTypes = {\n    nodeType: PropTypes.string,\n    targets: PropTypes.array,\n  };\n  constructor(props) {\n    super(props);\n    this.el = document.createElement(this.props.nodeType);\n  }\n  componentDidMount() {\n    this.moveToTarget();\n  }\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.predicate !== this.props.predicate ||\n      prevProps.targets !== this.props.targets\n    )\n      this.moveToTarget();\n  }\n  componentWillUnmount() {\n    if (this.ref && this.ref.contains(this.el)) {\n      this.ref.removeChild(this.el);\n    }\n  }\n  moveToTarget = () => {\n    const target = this.props.targets.find(\n      t => t.case === this.props.predicate,\n    );\n    this.ref = target && target.ref ? target.ref : null;\n    if (!this.ref || this.ref.contains(this.el)) return;\n    this.ref.appendChild(this.el);\n  };\n  render() {\n    return ReactDOM.createPortal(this.props.children, this.el);\n  }\n}\n\nexport default TargetPortal;\n","import React, { Component } from \"react\";\nimport TargetPortal from \"./TargetPortal\";\n\nclass App extends Component {\n  state = {};\n  componentDidMount() {\n    this.setState({ targetColor: \"blue\" });\n    this.interval = setInterval(() => {\n      this.setState({\n        targetColor: this.state.targetColor === \"red\" ? \"blue\" : \"red\",\n      });\n    }, 2000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  render() {\n    return (\n      <div>\n        <TargetPortal\n          predicate={this.state.targetColor}\n          targets={[\n            {\n              case: \"blue\",\n              ref: this.blueDiv,\n            },\n            {\n              case: \"red\",\n              ref: this.redDiv,\n            },\n          ]}\n        >\n          <div>TargetPortal child</div>\n        </TargetPortal>\n        <div\n          style={{ color: \"white\", backgroundColor: \"blue\" }}\n          ref={ref => (this.blueDiv = ref)}\n        />\n        <div>\n          Target will switch from the blue div to the red div every 2 seconds\n        </div>\n        <div\n          style={{ color: \"white\", backgroundColor: \"red\" }}\n          ref={ref => (this.redDiv = ref)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}